"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.evaluateSession = evaluateSession;

var _logger = require("../../commons/util/logger");

var _User = require("../user/User");

const p = (0, _logger.logD)(__filename);
/**
 * For now, just checking the uuid, but maybe add some params to check later.
 * If the session login status is valid, returns true.
 * @param session
 * @return
 */

function evaluateSession(session) {
  // p('session', session);
  switch (session.type) {
    case _User.UserType.Basic:
      return _isBasicValid(session);

    case _User.UserType.Google:
      return _isGoogleValid(session);

    case undefined:
      return false;

    default:
      throw TypeError(`Invalid Argument for UserType -> ${session.type}`);
  }
}
/**
 * At this moment there is nothing really to check.
 * @param session
 */


function _isBasicValid(session) {
  return session.uuid !== undefined;
}
/**
 * At this moment there is nothing really to check.
 * @param session
 */


function _isGoogleValid(session) {
  return session.uuid !== undefined;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9tb2RlbC9zZXNzaW9uL3Nlc3Npb25FdmFsdWF0b3IudHMiXSwibmFtZXMiOlsicCIsIl9fZmlsZW5hbWUiLCJldmFsdWF0ZVNlc3Npb24iLCJzZXNzaW9uIiwidHlwZSIsIlVzZXJUeXBlIiwiQmFzaWMiLCJfaXNCYXNpY1ZhbGlkIiwiR29vZ2xlIiwiX2lzR29vZ2xlVmFsaWQiLCJ1bmRlZmluZWQiLCJUeXBlRXJyb3IiLCJ1dWlkIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7O0FBQ0EsTUFBTUEsQ0FBQyxHQUFHLGtCQUFLQyxVQUFMLENBQVY7QUFFQTs7Ozs7OztBQU1PLFNBQVNDLGVBQVQsQ0FBeUJDLE9BQXpCLEVBQTREO0FBQ2pFO0FBQ0EsVUFBUUEsT0FBTyxDQUFDQyxJQUFoQjtBQUNFLFNBQUtDLGVBQVNDLEtBQWQ7QUFDRSxhQUFPQyxhQUFhLENBQUNKLE9BQUQsQ0FBcEI7O0FBQ0YsU0FBS0UsZUFBU0csTUFBZDtBQUNFLGFBQU9DLGNBQWMsQ0FBQ04sT0FBRCxDQUFyQjs7QUFDRixTQUFLTyxTQUFMO0FBQ0UsYUFBTyxLQUFQOztBQUNGO0FBQ0UsWUFBTUMsU0FBUyxDQUFFLG9DQUFtQ1IsT0FBTyxDQUFDQyxJQUFLLEVBQWxELENBQWY7QUFSSjtBQVVEO0FBRUQ7Ozs7OztBQUlBLFNBQVNHLGFBQVQsQ0FBdUJKLE9BQXZCLEVBQTBEO0FBQ3hELFNBQU9BLE9BQU8sQ0FBQ1MsSUFBUixLQUFpQkYsU0FBeEI7QUFDRDtBQUVEOzs7Ozs7QUFJQSxTQUFTRCxjQUFULENBQXdCTixPQUF4QixFQUEyRDtBQUN6RCxTQUFPQSxPQUFPLENBQUNTLElBQVIsS0FBaUJGLFNBQXhCO0FBQ0QiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBsb2csIGxvZ0UsIGxvZ0QgfSBmcm9tICcuLi8uLi9jb21tb25zL3V0aWwvbG9nZ2VyJztcbmltcG9ydCB7IFVzZXJUeXBlIH0gZnJvbSAnLi4vdXNlci9Vc2VyJztcbmNvbnN0IHAgPSBsb2dEKF9fZmlsZW5hbWUpO1xuXG4vKipcbiAqIEZvciBub3csIGp1c3QgY2hlY2tpbmcgdGhlIHV1aWQsIGJ1dCBtYXliZSBhZGQgc29tZSBwYXJhbXMgdG8gY2hlY2sgbGF0ZXIuXG4gKiBJZiB0aGUgc2Vzc2lvbiBsb2dpbiBzdGF0dXMgaXMgdmFsaWQsIHJldHVybnMgdHJ1ZS5cbiAqIEBwYXJhbSBzZXNzaW9uXG4gKiBAcmV0dXJuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBldmFsdWF0ZVNlc3Npb24oc2Vzc2lvbjogRXhwcmVzcy5TZXNzaW9uKTogYm9vbGVhbiB7XG4gIC8vIHAoJ3Nlc3Npb24nLCBzZXNzaW9uKTtcbiAgc3dpdGNoIChzZXNzaW9uLnR5cGUpIHtcbiAgICBjYXNlIFVzZXJUeXBlLkJhc2ljOlxuICAgICAgcmV0dXJuIF9pc0Jhc2ljVmFsaWQoc2Vzc2lvbik7XG4gICAgY2FzZSBVc2VyVHlwZS5Hb29nbGU6XG4gICAgICByZXR1cm4gX2lzR29vZ2xlVmFsaWQoc2Vzc2lvbik7XG4gICAgY2FzZSB1bmRlZmluZWQ6XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgZGVmYXVsdDpcbiAgICAgIHRocm93IFR5cGVFcnJvcihgSW52YWxpZCBBcmd1bWVudCBmb3IgVXNlclR5cGUgLT4gJHtzZXNzaW9uLnR5cGV9YCk7XG4gIH1cbn1cblxuLyoqXG4gKiBBdCB0aGlzIG1vbWVudCB0aGVyZSBpcyBub3RoaW5nIHJlYWxseSB0byBjaGVjay5cbiAqIEBwYXJhbSBzZXNzaW9uXG4gKi9cbmZ1bmN0aW9uIF9pc0Jhc2ljVmFsaWQoc2Vzc2lvbjogRXhwcmVzcy5TZXNzaW9uKTogYm9vbGVhbiB7XG4gIHJldHVybiBzZXNzaW9uLnV1aWQgIT09IHVuZGVmaW5lZDtcbn1cblxuLyoqXG4gKiBBdCB0aGlzIG1vbWVudCB0aGVyZSBpcyBub3RoaW5nIHJlYWxseSB0byBjaGVjay5cbiAqIEBwYXJhbSBzZXNzaW9uXG4gKi9cbmZ1bmN0aW9uIF9pc0dvb2dsZVZhbGlkKHNlc3Npb246IEV4cHJlc3MuU2Vzc2lvbik6IGJvb2xlYW4ge1xuICByZXR1cm4gc2Vzc2lvbi51dWlkICE9PSB1bmRlZmluZWQ7XG59XG4iXX0=